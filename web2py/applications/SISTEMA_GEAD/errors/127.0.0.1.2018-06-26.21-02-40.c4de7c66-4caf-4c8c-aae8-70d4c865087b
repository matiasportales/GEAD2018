(dp1
S'output'
p2
S"<type 'exceptions.IndexError'> list index out of range"
p3
sS'layer'
p4
S'/home/matias/GEAD2018/web2py/applications/SISTEMA_GEAD/controllers/actualizaciones.py'
p5
sS'code'
p6
S'# coding: utf8\n# intente algo como\ndef index(): return dict(message="hello from actualizaciones.py")\n\ndef listar_socios():\n    if(request.get_vars.buscar):\n        soc = db((db.socios.dni_socio.like(\'%\'+request.get_vars.buscar+\'%\'))).select()\n    try:\n        soc\n    except:\n        soc = db().select(db.socios.ALL)\n    return dict(soc=soc)\n\ndef modificar_socios():\n    soc = db(db.socios.dni_socio==request.args(0)).select()\n    socio = soc[0]\n    form = SQLFORM(db.socios,socio,deletable=False,\n           Field=[\'id_socio\',\'nombre_socio\',\'dni_socio\',\'foto\',\'apellido_socio\',\'direccion\',\'localidad\',\'cp\',\'fecha_nacimiento\',\'telefono_movil\',\'telefono_fijo\',\'mail\'],\n           labels = {\'id_socio\':\'NRO DE SOCIO\',\'nombre_socio\':\'NOMBRE\',\'foto\':\'FOTO\',\'dni_socio\':\'DNI\',\'apellido_socio\':\'APELLIDO\',\'direccion\':\'DOMICILIO\',\'localidad\':\'LOCALIDAD\',\n                                \'cp\':\'CODIGO POSTAL\',\'contacto\':\'CONTACTO\',\'telefono_movil\':\'TELEFONO MOVIL\',\'telefono_fijo\':\'TELEFONO FIJO\',\'mail\':\'MAIL\'},\n                                submit_button=\'Grabar\')\n    response.flash="ADVERTENCIA:Los datos modificados se guardaran en la base de datos"\n    if form.accepts(request.vars, session):\n        response.flash = \'Los datos fueron modificados\'\n        redirect(URL(r=request,f=\'listar_socios\'))\n    return dict(form=form)\n\ndef socios():\n    if(request.get_vars.buscar):\n        soc = db((db.socios.dni_socio.like(\'%\'+request.get_vars.buscar+\'%\'))).select()\n    try:\n        soc\n    except:\n        soc = db().select(db.socios.ALL)\n    return dict(soc=soc)\n\ndef borrar_socios():\n    soc = db(db.socios.dni_socio==request.args(0)).select()\n    socio = soc[0]\n    form = SQLFORM(db.socios,socio,deletable=True ,\n           Field=[\'id_socio\',\'nombre_socio\',\'foto\',\'apellido_socio\',\'direccion\',\'localidad\',\'cp\',\'fecha_nacimiento\',\'telefono_movil\',\'telefono_fijo\',\'mail\'],\n           labels = {\'id_socio\':\'NRO DE SOCIO\',\'nombre_socio\':\'NOMBRE\',\'foto\':\'FOTO\',\'apellido_socio\':\'APELLIDO\',\'direccion\':\'DOMICILIO\',\'localidad\':\'LOCALIDAD\',\n                                \'cp\':\'CODIGO POSTAL\',\'contacto\':\'CONTACTO\',\'telefono_movil\':\'TELEFONO MOVIL\',\'telefono_fijo\':\'TELEFONO FIJO\',\'mail\':\'MAIL\'},\n                                submit_button=\'Eliminar\')\n    response.flash="ADVERTENCIA:Los datos eliminados desapareceran de la base de datos"\n    if form.accepts(request.vars, session):\n        response.flash = \'Los datos fueron modificados\'\n        redirect(URL(r=request,f=\'listar_socios\'))\n    else:\n        response.flash="ADVERTENCIA: todos los datos de este socio seran eliminados de la base de datos.Para eliminar haga click en la casilla de confirmacion y luego presione el boton eliminar"    \n    return dict(form=form)\n\n##########################################################################################\n\n\ndef listar_actividad():\n    if(request.get_vars.buscar):\n        act = db((db.actividad.nombre_actividad.like(\'%\'+request.get_vars.buscar+\'%\'))).select()\n    try:\n        act\n    except:\n        act = db().select(db.actividad.ALL)\n    return dict( act=act)\n\ndef modificar_actividad():\n    act = db(db.actividad.id_actividad==request.args(0)).select()\n    actividad = act[0]\n    form = SQLFORM(db.actividad,actividad,deletable=False,\n           Field=[\'id_actividad\',\'nombre_actividad\',\'foto\',\'descripcion\'],\n           labels = {\'id_actividad\':\'NRO DE ACTIVIDAD\',\'nombre_actividad\':\'NOMBRE ACTIVIDAD\',\'foto\':\'FOTO\',\'descripcion\':\'DESCRIPCION\'},\n                                submit_button=\'Grabar\')\n    response.flash="ADVERTENCIA:Los datos modificados se guardaran en la base de datos"\n    if form.accepts(request.vars, session):\n        response.flash = \'Los datos fueron modifiados\'\n        redirect(URL(r=request,f=\'listar_actividad\'))\n    return dict(form=form)\n\ndef actividad():\n    if(request.get_vars.buscar):\n        act = db((db.actividad.nombre_actividad.like(\'%\'+request.get_vars.buscar+\'%\'))).select()\n    try:\n        act\n    except:\n        act = db().select(db.actividad.ALL)\n    return dict( act=act)\n\ndef borrar_actividad():\n    act = db(db.actividad.id_actividad==request.args(0)).select()\n    actividad = act[0]\n    form = SQLFORM(db.actividad,actividad,deletable=True ,\n           Field=[\'id_actividad\',\'nombre_actividad\',\'foto\',\'descripcion\'],\n           labels = {\'id_actividad\':\'NRO DE ACTIVIDAD\',\'nombre_actividad\':\'NOMBRE ACTIVIDAD\',\'foto\':\'FOTO\',\'descripcion\':\'DESCRIPCION\'},\n                                submit_button=\'Eliminar\')\n    response.flash="ADVERTENCIA:Los datos eliminados desapareceran de la base de datos"\n    if form.accepts(request.vars, session):\n        response.flash = \'Los datos fueron modificados\'\n        redirect(URL(r=request,f=\'listar_actividad\'))\n    else:\n        response.flash="ADVERTENCIA: todos los datos de esta actividad seran eliminados de la base de datos.Para eliminar haga click en la casilla de confirmacion y luego presione el boton eliminar"    \n    return dict(form=form)\n\nresponse._vars=response._caller(borrar_actividad)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/matias/GEAD2018/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/home/matias/GEAD2018/web2py/applications/SISTEMA_GEAD/controllers/actualizaciones.py", line 102, in <module>\n  File "/home/matias/GEAD2018/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/matias/GEAD2018/web2py/applications/SISTEMA_GEAD/controllers/actualizaciones.py", line 89, in borrar_actividad\n    actividad = act[0]\n  File "/home/matias/GEAD2018/web2py/gluon/dal.py", line 10807, in __getitem__\n    row = self.records[i]\nIndexError: list index out of range\n'
p11
s.